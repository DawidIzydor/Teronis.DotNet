<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Condition="'$(IsMSBuildFileImported)' != 'true'" Project="$([MSBuild]::GetPathOfFileAbove(.msbuild))" />
  <Import Condition="'$(IsTeronisDotNetCorePropsFileImported)' != 'true'" Project="$(RootCorePropsPath)" />
  <Import Project="$(TeronisMSBuildPackagingProjectBuildInPackageTargetsFile)" />
  
  <PropertyGroup>
    <PackageDescription Condition="'$(PackageDescription)' == '' And '$(Description)' != ''">$(Description)</PackageDescription>
  </PropertyGroup>

  <ItemGroup>
	  <Compile Include="$(MSBuildThisFileDirectory)/Nullable.cs" Condition="'$(Nullable)' == 'enable' And '$(DisallowNullableAttributes)' != 'true'" />
  </ItemGroup>

  <PropertyGroup>
    <!-- 
      We get these errors, because the .NET Core 2.0 implementation/interfaces are not decorated with nullability attributes and somehow the analyzer/compiler just checks nullability
      because of pure existence of such attribtues. 
      -->
    <!-- Warning	CS8767	Nullability of reference types in type of parameter '..' of '..' doesn't match implicitly implemented member '..' (possibly because of nullability attributes). -->
    <!-- Warning	CS8769	Nullability of reference types in type of parameter '..' doesn't match implemented member '..' (possibly because of nullability attributes). -->
    <NoWarn Condition="'$(TargetFramework)' == 'netstandard2.0'">$(NoWarn);8769;8767</NoWarn>
  </PropertyGroup>

  <ItemGroup>

    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" Conditions="'$(DisableGitVersionCache)' != 'true' And $(IsPackable)" />

    <ProjectReference Include="$(MSBuildThisFileDirectory)src\MSBuild\Packaging\GitVersionCache\GitVersionCache\ref\PackagePublish\PackagePublish.MSBuild.Packaging.GitVersionCache.csproj"
      Condition="'$(IsGitVersionCacheRelated)' != 'true'
        And '$(DisableGitVersionCache)' != 'true' 
        And '$(IsPackable)' == 'true'" />
    
  </ItemGroup>

  <PropertyGroup>
    <_TeronisMSBuildPackagingGitVersionCachePropsFile>$(TeronisMSBuildPackagingGitVersionCachePropsFileTemplate.Replace('(Configuration)','$(Configuration)'))</_TeronisMSBuildPackagingGitVersionCachePropsFile>
    <_TeronisMSBuildPackagingGitVersionCacheTargetsFile>$(TeronisMSBuildPackagingGitVersionCacheTargetsFileTemplate.Replace('(Configuration)','$(Configuration)'))</_TeronisMSBuildPackagingGitVersionCacheTargetsFile>
  </PropertyGroup>

  <Import Project="$(_TeronisMSBuildPackagingGitVersionCachePropsFile)" 
    Condition="Exists('$(_TeronisMSBuildPackagingGitVersionCachePropsFile)')
      And '$(IsGitVersionCacheRelated)' != 'true'
      And '$(DisableGitVersionCache)' != 'true'" />

  <Import Project="$(_TeronisMSBuildPackagingGitVersionCacheTargetsFile)"
    Condition="Exists('$(_TeronisMSBuildPackagingGitVersionCacheTargetsFile)') 
      And '$(IsGitVersionCacheRelated)' != 'true'
      And '$(DisableGitVersionCache)' != 'true'" />

  <ItemGroup>

    <_ProjectReferences Include="@(ProjectReference)">
      <!-- Prevent PackagePublish.*-projects from being tracked in *.nuspec files. -->
      <IsPackagePublishProject Condition="'%(IsPackagePublishProject)' == ''">$([System.String]::Copy('%(Filename)').Contains('PackagePublish.'))</IsPackagePublishProject>
      <ReferenceOutputAssembly Condition="'%(IsPackagePublishProject)' == 'true'">false</ReferenceOutputAssembly>
      <SkipGetTargetFrameworkProperties Condition="'%(IsPackagePublishProject)' == 'true'">true</SkipGetTargetFrameworkProperties>
      <GlobalPropertiesToRemove Condition="'%(IsPackagePublishProject)' == 'true'">TargetFramework</GlobalPropertiesToRemove>
      <BuildProjectReferences Condition="'%(IsPackagePublishProject)' == 'true'">false</BuildProjectReferences>

      <!-- <AdditionalProperties Condition="'%(Filename)' == 'Teronis.NetStandard.Core'">%(AdditionalProperties);TargetFramework=netstandard2.0</AdditionalProperties> -->
      <!-- <AdditionalProperties >%(AdditionalProperties);TargetFramework=$(TargetFramework)</AdditionalProperties> -->
      <!-- <AdditionalProperties Condition="'%(Filename)' == 'Teronis.NetStandard.Core'">TargetFramework=$(TargetFramework)</AdditionalProperties> -->
      <!-- <Properties>%(Properties);DisallowNullableAttributes=true</Properties> -->
      <AdditionalProperties Condition="'%(Filename)' == 'Teronis.NetStandard.Core'">%(AdditionalProperties);TargetFramework=$(TargetFramework)</AdditionalProperties>
    </_ProjectReferences>

    <ProjectReference Remove="@(ProjectReference)" />
    <ProjectReference Include="@(_ProjectReferences)" />

  </ItemGroup>

  <Target Name="_DirectoryBuildBeforeClean" BeforeTargets="BeforeClean">
    <PropertyGroup>
      <DisableGitVersionCache>true</DisableGitVersionCache>
    </PropertyGroup>
  </Target>

  <Target Name="_DirectoryBuildAfterClean" BeforeTargets="AfterClean">
    <PropertyGroup>
      <DisableGitVersionCache>false</DisableGitVersionCache>
    </PropertyGroup>
  </Target>

</Project>

<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Condition="'$(IsMSBuildFileImported)' != 'true'" Project="$([MSBuild]::GetPathOfFileAbove(.msbuild))" />
  <Import Condition="'$(IsTeronisDotNetCorePropsFileImported)' != 'true'" Project="$(RootCorePropsPath)" />
  <Import Project="$(TeronisMSBuildPackagingProjectBuildInPackagePropsFile)" />
  <Import Project="$(TeronisMSBuildPackagingPackExecutablePropsFile)" Condition="Exists($(TeronisMSBuildPackagingPackExecutablePropsFile))" />

  <Import Project="$(TeronisModuleInitializerAssemblyLoaderExecutablePropsFile)" Condition="Exists($(TeronisModuleInitializerAssemblyLoaderExecutablePropsFile))" />
  <Import Project="$(TeronisModuleInitializerAssemblyLoaderMSBuildPropsFile)" />

  <PropertyGroup>
    <AssemblyName Condition="'$(AssemblyName)' == ''">$(MSBuildProjectName)</AssemblyName>
    <Platforms Condition="'$(Platforms)' == ''">AnyCPU;x64;x86</Platforms>
    <DebugSymbols Condition="'$(DebugSymbols)' == ''">true</DebugSymbols>
    <DebugType Condition="'$(DebugType)' == ''">portable</DebugType>
    <GeneratePackageOnBuild Condition="'$(GeneratePackageOnBuild)' == ''">false</GeneratePackageOnBuild>
    <LangVersion Condition="'$(LangVersion)' == ''">8.0</LangVersion>
  </PropertyGroup>

  <ItemGroup>
	  <Compile Include="$(MSBuildThisFileDirectory)/Nullable.cs" />
  </ItemGroup>

  <PropertyGroup>
    <Authors Condition="'$(Authors)' == ''">Teroneko</Authors>
    <Company Condition="'$(Company)' == ''">$(MSBuildProjectName)</Company>
    <Product Condition="'$(Product)' == ''">$(MSBuildProjectName)</Product>
    <PackageLicenseFile Condition="'$(PackageLicenseFile)' == ''">LICENSE.md</PackageLicenseFile>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <Copyright Condition="'$(Copyright)' == ''">Teroneko</Copyright>
    <PackageIcon Condition="'$(PackageIcon)' == ''">icon.png</PackageIcon>
    <!-- <IncludeSymbols Condition="'$(IncludeSymbols)' == ''">true</IncludeSymbols>
    <SymbolPackageFormat Condition="'$(SymbolPackageFormat)' == ''">snupkg</SymbolPackageFormat> -->
    <!-- <EmbedAllSources>true</EmbedAllSources> -->
    <!--
    Embed source files that are not tracked by the source control manager to the PDB.
    This is useful if you generate files during the build .
    -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <NeutralLanguage Condition="'$(NeutralLanguage)' == ''">en</NeutralLanguage>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
  </PropertyGroup>

  <ItemGroup>
    <None Include="$(MSBuildThisFileDirectory)\LICENSE.md">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>

    <None Include="$(MSBuildThisFileDirectory)\icon.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <PropertyGroup>
    <AddSyntheticProjectReferencesForSolutionDependencies>false</AddSyntheticProjectReferencesForSolutionDependencies>
  </PropertyGroup>

  <PropertyGroup>

    <IsTeronisProject>false</IsTeronisProject>
    <IsTeronisProject Condition="$(MSBuildProjectName.StartsWith('Teronis.'))">true</IsTeronisProject>

    <IsGitVersionCacheProject>false</IsGitVersionCacheProject>
    <IsGitVersionCacheProject Condition="$(MSBuildProjectName.StartsWith('GitVersionCache.'))">true</IsGitVersionCacheProject>

    <IsTestProject>false</IsTestProject>
    <IsTestProject Condition="$(MSBuildProjectName.EndsWith('.Test')) Or $(MSBuildProjectName.StartsWith('Test.'))">true</IsTestProject>

    <IsPackagePublishProject>false</IsPackagePublishProject>
    <IsPackagePublishProject Condition="$(MSBuildProjectName.StartsWith('PackagePublish2.'))">true</IsPackagePublishProject>

    <IsLocalizationProject>false</IsLocalizationProject>
    <IsLocalizationProject Condition="$(MSBuildProjectName.EndsWith('.Localization'))">true</IsLocalizationProject>

    <IsExampleProject>false</IsExampleProject>
    <IsExampleProject Condition="$(MSBuildProjectName.EndsWith('.Example'))">true</IsExampleProject>

    <IsExecutablePackageProject>false</IsExecutablePackageProject>
    <IsExecutablePackageProject Condition="$(MSBuildProjectName.StartsWith('ExecutablePackage.'))">true</IsExecutablePackageProject>

    <IsPublishablePackageProject>false</IsPublishablePackageProject>
    <IsPublishablePackageProject Condition="$(MSBuildProjectName.StartsWith('PublishablePackage.'))">true</IsPublishablePackageProject>

  </PropertyGroup>

  <PropertyGroup Condition="$(IsLocalizationProject)">
    <Description>Contains localization resources for assembly $(MSBuildProjectName.Replace('.Localization','')).</Description>
  </PropertyGroup>

  <PropertyGroup Condition="$(IsTestProject)">
    <!-- TODO: Refactor with .Substring(..) and .IndexOf(..). -->
    <_ProjectNameWithoutTest Condition="$(MSBuildProjectName.EndsWith('.Test'))">$(MSBuildProjectName.Replace('.Test','')</_ProjectNameWithoutTest>
    <_ProjectNameWithoutTest Condition="$(MSBuildProjectName.StartsWith('Test.'))">$(MSBuildProjectName.Replace('Test.','Teronis')</_ProjectNameWithoutTest>
    <Description>Contains test cases for assembly $(_ProjectNameWithoutTest).</Description>
  </PropertyGroup>

  <PropertyGroup>
    <IsGitVersionCacheRelated Condition="'$(IsGitVersionCacheRelated)' == ''
      And ('$(IsGitVersionCacheProject)'
        Or '$(IsPackagePublishProject)')">true</IsGitVersionCacheRelated>

    <IsGitVersionCacheRelated Condition="'$(IsGitVersionCacheRelated)' == ''">false</IsGitVersionCacheRelated>

    <!-- https://docs.microsoft.com/de-de/dotnet/core/tools/csproj#ispackable -->
    <IsPackable Condition="'$(IsPackable)' == ''
      And ($(IsGitVersionCacheRelated)
        Or $(IsTestProject)
        Or $(IsLocalizationProject)
        Or $(IsExampleProject))">false</IsPackable>

    <IsPackable Condition="'$(IsPackable)' == ''">true</IsPackable>

    <!--
      IsPublishablePackageProject:
        A executable package project does inherit package name and package
        version from project specified in ExecutableProjectReference.
      IsPublishablePackageProject:
        A publishable package project is a synthetic project reference.
      -->
    <DisableGitVersionCache Condition="$(IsExecutablePackageProject) Or $(IsPublishablePackageProject)">true</DisableGitVersionCache>

  </PropertyGroup>

  <PropertyGroup Condition="'$(IsGitVersionCacheRelated)' == 'true'">
    <DebugSymbols>false</DebugSymbols>
    <DebugType>None</DebugType>
  </PropertyGroup>

  <PropertyGroup>
    <!-- GitVersionTask: NuGet does support SemVer 2.0 -->
    <!-- Disabled because we use GitVersionCache. -->
    <!-- <UseFullSemVerForNuGet>true</UseFullSemVerForNuGet> -->
  </PropertyGroup>

  <PropertyGroup>
    <!-- <AddSyntheticProjectReferencesForSolutionDependencies>false</AddSyntheticProjectReferencesForSolutionDependencies> -->
    <ProjectBuildInPackageVerbosity>detailed</ProjectBuildInPackageVerbosity>
    <!-- The package name and package version are inherited from project specified in ExecutableProjectReference. -->
    <PackAsExecutableMSBuildProperties>$(PackAsExecutableMSBuildProperties);DisableGitVersionCache=true</PackAsExecutableMSBuildProperties>
  </PropertyGroup>

  <!-- 
    Belongs to Teronis.MSBuild.Pacakging.PackExecutable
   -->
  <PropertyGroup>
    <PackagePublishmentOutputPath>$(PackagePublishmentsDirectory)$(MSBuildProjectName)</PackagePublishmentOutputPath>
    <!-- <GetExecutableProjectPropertiesDependsOn>$(GetExecutableProjectPropertiesDependsOn);GetVersionCacheWhenGettingExecutableProjectProperties</GetExecutableProjectPropertiesDependsOn> -->
  </PropertyGroup>

  <!-- <ItemGroup>
    <ExecutableProjectReferenceMSBuildProperties Include="DisableGitVersionCache">
      <Value>true</Value>
    </ExecutableProjectReferenceMSBuildProperties>
  </ItemGroup> -->

  <PropertyGroup>
    <ExecutableProjectReferenceMSBuildProperties>$(ExecutableProjectReferenceMSBuildProperties);DisableGitVersionCache=true</ExecutableProjectReferenceMSBuildProperties>
  </PropertyGroup>

</Project>
<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="$(MSBuildThisFileName).props" Condition="'$(IsTeronisMSBuildPackagingGenerateFilesystemPackagePropsImported)' != 'true'"/>

  <PropertyGroup>

    <IsTeronisMSBuildPackUnzipPackageTargetsImported>true</IsTeronisMSBuildPackUnzipPackageTargetsImported>
    <!-- The location where to search. -->
    <UnzipPackageDirectory Condition="'$(UnzipPackageDirectory)' == ''">$(MSBuildProjectDirectory)\bin\$(Configuration)</UnzipPackageDirectory>

    <_FilesystemPackageProjectBinaryDirectory>$(MSBuildProjectDirectory)\bin\$(Configuration)\$(TargetFramework)\</_FilesystemPackageProjectBinaryDirectory>

    <!-- The location where to unzip. -->
    <UnzipPackageDestinationDirectory Condition="'$(UnzipPackageDestinationDirectory)' == ''">$(_FilesystemPackageProjectBinaryDirectory)packagePublish</UnzipPackageDestinationDirectory>
    <_TargetTasksTargets Condition="'$(_TargetTasksTargets)' == ''">$(MSBuildThisFileDirectory)TargetTasks.targets</_TargetTasksTargets>
    <_UnzipPackageId>FsPkg.$(MSBuildProjectName)</_UnzipPackageId>

    <_FilesystemPackageIntermediateOutputPath Condition="'$(_FilesystemPackageIntermediateOutputPath)' == '' And '$(IntermediateOutputPath)' != ''">$(IntermediateOutputPath.TrimEnd('\'))\</_FilesystemPackageIntermediateOutputPath>
    <_FilesystemPackageIntermediateOutputPath Condition="'$(_FilesystemPackageIntermediateOutputPath)' == ''">$(MSBuildProjectDirectory)\obj\</_FilesystemPackageIntermediateOutputPath>
    <_GenerateFilesystemPackageInputsFile>$(_FilesystemPackageIntermediateOutputPath)PackagePublish.Inputs.txt</_GenerateFilesystemPackageInputsFile>
    <_GenerateFilesystemPackageOutputsFile>$(_FilesystemPackageIntermediateOutputPath)PackagePublish.Outputs.txt</_GenerateFilesystemPackageOutputsFile>

  </PropertyGroup>

  <Target Name="_CalculateInputsOutputsForGenerateFilesystemPackage">

    <ItemGroup>
      <_GenerateFilesystemPackageInputFiles Include="$(_FilesystemPackageProjectBinaryDirectory)**\*" />
      <_GenerateFilesystemPackageInputFiles Remove="$(_FilesystemPackageProjectBinaryDirectory)filesystemPublish\**\*" />
      <_GenerateFilesystemPackageInputFiles Remove="$(_FilesystemPackageProjectBinaryDirectory)packagePublish\**\*" />
      <_GenerateFilesystemPackageInputs Include="@(_GenerateFilesystemPackageInputFiles->'%(FullPath))')" />
    </ItemGroup>

    <Message Text="# $(_GenerateFilesystemPackageOutputsFile)" Importance="high" />
    
    <ReadLinesFromFile File="$(_GenerateFilesystemPackageOutputsFile)">
      <Output TaskParameter="Lines" ItemName="_GenerateFilesystemPackageOutputs" />
    </ReadLinesFromFile>
    
    <!--<WriteLinesToFile File="$(_GenerateFilesystemPackageOutputsFile).latest.txt" Lines="@(_GenerateFilesystemPackageOutputs)" Overwrite="true" WriteOnlyWhenDifferent="true" />-->

    <WriteLinesToFile File="$(_GenerateFilesystemPackageInputsFile)" Lines="@(_GenerateFilesystemPackageInputs)" Overwrite="true" WriteOnlyWhenDifferent="true" />

  </Target>

  <Target Name="GenerateFilesystemPackage" DependsOnTargets="$(GenerateFilesystemPackageDependsOn)"
          Inputs="$(_GenerateFilesystemPackageInputsFile)" Outputs="$(_GenerateFilesystemPackageOutputsFile)">

    <PropertyGroup>
      <_MSBuildProjectPath>$(MSBuildProjectDirectory)\$(MSBuildProjectName).csproj</_MSBuildProjectPath>
    </PropertyGroup>
    
    <Message Text="[$(MSBuildThisFileName)] Package Publish $(_MSBuildProjectPath) (Configuration=$(Configuration), TargetFramework=$(TargetFramework))" Importance="high" />

    <PropertyGroup>
      <!--PackageVersion=0.0.1-$(TargetFramework.ToLower().Replace('.','v'));-->
      <ThisProjectMSBuildProperties>
        Configuration=$(Configuration);
        PackageId=$(_UnzipPackageId);
        PackageVersion=0.0.1-fs-pkg.9999;
        DisableGitVersionTask=true
      </ThisProjectMSBuildProperties>
    </PropertyGroup>

    <MSBuild Projects="$(_MSBuildProjectPath)" Targets="Pack" Properties="$(ThisProjectMSBuildProperties)" />

    <PropertyGroup>

      <_UnzipPackageSearchProperties>
        UnzipPackageDirectory=$(UnzipPackageDirectory);
        UnzipPackageId=$(_UnzipPackageId);
        UnzipPackageDestinationDirectory=$(UnzipPackageDestinationDirectory)
      </_UnzipPackageSearchProperties>

    </PropertyGroup>

    <MSBuild Projects="$(_TargetTasksTargets)" Targets="UnzipPackage" Properties="$(_UnzipPackageSearchProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_FoundPackage" />
    </MSBuild>

    <WriteLinesToFile File="$(_GenerateFilesystemPackageOutputsFile)" Lines="@(_GenerateFilesystemPackageInputs)" Overwrite="true" />

    <Delete Files="@(_FoundPackage)" />

  </Target>

  <Target Name="_CleanFilesystemPackage" DependsOnTargets="$(CleanFilesystemPackageDependsOn)" BeforeTargets="BeforeClean">

    <PropertyGroup>
      <DeleteDirectoryMSBuildProperties>
        Directory=$(UnzipPackageDestinationDirectory);
        Retries=5
      </DeleteDirectoryMSBuildProperties>
    </PropertyGroup>

    <Delete Files="$(_GenerateFilesystemPackageInputsFile);$(_GenerateFilesystemPackageOutputsFile)" />
    <MSBuild Projects="$(_TargetTasksTargets)" Targets="DeleteDirectory" Properties="$(DeleteDirectoryMSBuildProperties)" ContinueOnError="true" />

  </Target>

</Project>